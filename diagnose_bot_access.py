#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –±–æ—Ç–æ–≤ –∫ —á–∞—Ç–∞–º
"""
import asyncio
import logging
from aiogram import Bot
from config.settings import settings

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def check_bot_access(bot_name: str, bot_token: str, chat_id: int):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø –±–æ—Ç–∞ –∫ —á–∞—Ç—É"""
    try:
        bot = Bot(token=bot_token)
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        chat_info = await bot.get_chat(chat_id)
        logger.info(f"‚úÖ {bot_name}: –î–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É {chat_id} –µ—Å—Ç—å")
        logger.info(f"   –ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞: {chat_info.title}")
        logger.info(f"   –¢–∏–ø —á–∞—Ç–∞: {chat_info.type}")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ –≤ —á–∞—Ç–µ
        try:
            bot_member = await bot.get_chat_member(chat_id, bot.id)
            logger.info(f"   –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞: {bot_member.status}")
            return True
        except Exception as e:
            logger.warning(f"   –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞: {e}")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå {bot_name}: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É {chat_id}")
        logger.error(f"   –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        await bot.session.close()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    logger.info("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –±–æ—Ç–æ–≤ –∫ —á–∞—Ç–∞–º...")
    logger.info(f"–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (FORUM_CHAT_ID): {settings.FORUM_CHAT_ID}")
    logger.info(f"–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (SUPPORT_CHAT_ID): {settings.SUPPORT_CHAT_ID}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –≤—Å–µ—Ö –±–æ—Ç–æ–≤ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —á–∞—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    bots_to_check = [
        ("UserBot", settings.USER_BOT_TOKEN, settings.FORUM_CHAT_ID),
        ("TaskBot", settings.TASK_BOT_TOKEN, settings.FORUM_CHAT_ID),
        ("MoverBot", settings.MOVER_BOT_TOKEN, settings.FORUM_CHAT_ID),
    ]
    
    results = []
    for bot_name, bot_token, chat_id in bots_to_check:
        if bot_token:
            result = await check_bot_access(bot_name, bot_token, chat_id)
            results.append((bot_name, result))
        else:
            logger.error(f"‚ùå {bot_name}: –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            results.append((bot_name, False))
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    logger.info("\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:")
    all_ok = True
    for bot_name, has_access in results:
        status = "‚úÖ OK" if has_access else "‚ùå –ù–ï–¢ –î–û–°–¢–£–ü–ê"
        logger.info(f"   {bot_name}: {status}")
        if not has_access:
            all_ok = False
    
    if all_ok:
        logger.info("üéâ –í—Å–µ –±–æ—Ç—ã –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏!")
    else:
        logger.error("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –±–æ—Ç—ã –Ω–µ –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏!")
        logger.error("   –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–æ–≤ –≤ —á–∞—Ç –∏ –¥–∞—Ç—å –∏–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

if __name__ == "__main__":
    asyncio.run(main())
