import asyncio
import logging
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from core.redis_client import redis_client
from bots.task_bot.pubsub_manager import TaskBotPubSubManager
from bots.task_bot.task_bot import TaskBot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler("logs/test_task_chain.log", encoding="utf-8"),
        logging.StreamHandler()
    ]
)

logger = logging.getLogger(__name__)

async def test_task_chain():
    """–¢–µ—Å—Ç –≤—Å–µ–π —Ü–µ–ø–æ—á–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∑–∞–¥–∞—á –æ—Ç UserBot –∫ TaskBot —á–µ—Ä–µ–∑ PubSub"""
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Ü–µ–ø–æ—á–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∑–∞–¥–∞—á...")
        
        # –°–æ–∑–¥–∞–µ–º TaskBot
        task_bot = TaskBot()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º TaskBot (—ç—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç PubSub –ø–æ–¥–ø–∏—Å–∫—É)
        logger.info("–ó–∞–ø—É—Å–∫ TaskBot...")
        # –í–º–µ—Å—Ç–æ –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞, –ø—Ä–æ—Å—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º PubSub
        await task_bot.pubsub_manager.subscribe("new_tasks", task_bot._pubsub_message_handler)
        await task_bot.pubsub_manager.start()
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Å–æ–±—ã—Ç–∏—è –æ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–µ (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç UserBot)
        logger.info("–ò–º–∏—Ç–∞—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏—è –æ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–µ...")
        await redis_client.connect()  # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É –≤ Redis (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç UserBot)
        test_task_data = {
            "text": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ø–æ—á–∫–∏",
            "user_id": 123456789,
            "username": "testuser",
            "first_name": "Test",
            "chat_id": -1002269851341,
            "message_id": 1001,
            "timestamp": "2025-07-31T14:00:00"
        }
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É –≤ Redis (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç UserBot)
        # save_task –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π task_id
        task_id = await redis_client.save_task(test_task_data)
        logger.info(f"–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Å ID: {task_id}")
        
        # –ü—É–±–ª–∏–∫—É–µ–º —Å–æ–±—ã—Ç–∏–µ –æ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–µ (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç UserBot)
        await redis_client.conn.publish("new_tasks", '{"type": "new_task", "task_id": "' + task_id + '"}')
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
        logger.info("–û–∂–∏–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è...")
        await asyncio.sleep(10)
        
        logger.info("‚úÖ –¢–µ—Å—Ç —Ü–µ–ø–æ—á–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∑–∞–¥–∞—á –∑–∞–≤–µ—Ä—à–µ–Ω")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ —Ü–µ–ø–æ—á–∫–∏: {e}", exc_info=True)
    finally:
        logger.info("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞...")

if __name__ == "__main__":
    asyncio.run(test_task_chain())
