import asyncio
import logging
from config.settings import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –±–æ—Ç–æ–≤ –≤ —Ä–µ–∂–∏–º–µ polling"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –±–æ—Ç–æ–≤ –≤ —Ä–µ–∂–∏–º–µ polling...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–æ—Ç—ã
        from bots.user_bot.user_bot import UserBot
        from bots.task_bot.task_bot import TaskBot
        from bots.mover_bot.mover_bot import MoverBot
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–æ–≤
        user_bot = UserBot()
        task_bot = TaskBot()
        mover_bot = MoverBot()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–æ–≤
        logger.info("üîÑ –ó–∞–ø—É—Å–∫ –±–æ—Ç–æ–≤...")
        await asyncio.gather(
            user_bot.start_polling(),
            task_bot.start(),
            mover_bot.start_polling(),
            return_exceptions=True
        )
        
    except KeyboardInterrupt:
        logger.info("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–æ–≤...")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–æ–≤: {e}", exc_info=True)

if __name__ == "__main__":
    asyncio.run(main())
