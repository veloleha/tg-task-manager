#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ Task Manager Bot
"""

import asyncio
import logging
from core.redis_client import redis_client
from bots.mover_bot.mover_bot import MoverBot
from config import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_media_task_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏"""
    logger.info("üé¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É —Å —Ñ–æ—Ç–æ
    task_data = {
        'user_id': 123456789,
        'chat_id': -1001234567890,
        'username': 'media_tester',
        'first_name': 'Media',
        'message_text': '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ —Å —Ñ–æ—Ç–æ',
        'message_id': 12345,
        'status': 'unreacted',
        'created_at': '2025-01-10T22:55:00Z',
        'has_photo': True,
        'photo_file_ids': ['AgACAgIAAxkBAAIBY2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm'],
        'has_video': False,
        'has_document': False
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–¥–∞—á—É
    task_id = await redis_client.save_task(task_data)
    logger.info(f"‚úÖ –ó–∞–¥–∞—á–∞ —Å –º–µ–¥–∏–∞ —Å–æ–∑–¥–∞–Ω–∞: {task_id}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á—É –æ–±—Ä–∞—Ç–Ω–æ
    saved_task = await redis_client.get_task(task_id)
    if saved_task:
        logger.info(f"‚úÖ –ó–∞–¥–∞—á–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ Redis:")
        logger.info(f"   - has_photo: {saved_task.get('has_photo', False)}")
        logger.info(f"   - photo_file_ids: {saved_task.get('photo_file_ids', [])}")
        logger.info(f"   - message_text: {saved_task.get('message_text', '')}")
    else:
        logger.error("‚ùå –ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ Redis!")
        return None
    
    return task_id, saved_task

async def test_mover_bot_media_methods():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥—ã MoverBot –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏"""
    logger.info("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ MoverBot –¥–ª—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä MoverBot (–±–µ–∑ –∑–∞–ø—É—Å–∫–∞)
    mover_bot = MoverBot()
    
    # –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ —Å –≤–∏–¥–µ–æ
    test_task = {
        'task_id': 'test-video-task',
        'user_id': 987654321,
        'username': 'video_user',
        'first_name': 'Video',
        'message_text': '–ó–∞–¥–∞—á–∞ —Å –≤–∏–¥–µ–æ',
        'status': 'unreacted',
        'assignee': '',
        'has_video': True,
        'video_file_id': 'BAACAgIAAxkBAAIBY2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm',
        'has_photo': False,
        'has_document': False
    }
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    formatted_message = mover_bot._format_task_message(test_task)
    logger.info(f"‚úÖ –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
    logger.info(f"   {formatted_message}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ–¥–∏–∞-–¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è
    if test_task.get('has_video'):
        logger.info(f"‚úÖ –í–∏–¥–µ–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ: {test_task.get('video_file_id')}")
    
    if test_task.get('has_photo'):
        logger.info(f"‚úÖ –§–æ—Ç–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ: {test_task.get('photo_file_ids')}")
    
    if test_task.get('has_document'):
        logger.info(f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω: {test_task.get('document_file_id')}")
    
    logger.info("‚úÖ –ú–µ—Ç–æ–¥—ã MoverBot –¥–ª—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

async def test_media_task_flow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–¥–∞—á–∏ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏"""
    logger.info("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∑–∞–¥–∞—á–∏ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏...")
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º
    task_data = {
        'user_id': 555666777,
        'chat_id': -1001111222333,
        'username': 'doc_user',
        'first_name': 'Document',
        'message_text': '–í–∞–∂–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏',
        'message_id': 54321,
        'status': 'unreacted',
        'created_at': '2025-01-10T22:56:00Z',
        'has_document': True,
        'document_file_id': 'BQACAgIAAxkBAAIBY2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm',
        'document_name': 'important_doc.pdf',
        'has_photo': False,
        'has_video': False
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–¥–∞—á—É
    task_id = await redis_client.save_task(task_data)
    logger.info(f"‚úÖ –ó–∞–¥–∞—á–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º —Å–æ–∑–¥–∞–Ω–∞: {task_id}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ "in_progress"
    await redis_client.update_task(
        task_id,
        status='in_progress',
        assignee='test_executor'
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É
    updated_task = await redis_client.get_task(task_id)
    if updated_task:
        logger.info(f"‚úÖ –ó–∞–¥–∞—á–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:")
        logger.info(f"   - status: {updated_task.get('status')}")
        logger.info(f"   - assignee: {updated_task.get('assignee')}")
        logger.info(f"   - has_document: {updated_task.get('has_document')}")
        logger.info(f"   - document_name: {updated_task.get('document_name')}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
    await redis_client.update_task(
        task_id,
        status='completed'
    )
    
    final_task = await redis_client.get_task(task_id)
    if final_task:
        logger.info(f"‚úÖ –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:")
        logger.info(f"   - status: {final_task.get('status')}")
        logger.info(f"   - –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {final_task.get('has_document', False)}")
    
    return task_id

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤...")
    
    try:
        # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏
        photo_task_id, photo_task = await test_media_task_creation()
        
        # –¢–µ—Å—Ç 2: –ú–µ—Ç–æ–¥—ã MoverBot
        await test_mover_bot_media_methods()
        
        # –¢–µ—Å—Ç 3: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∑–∞–¥–∞—á–∏ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏
        doc_task_id = await test_media_task_flow()
        
        logger.info("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        logger.info("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        logger.info("   - –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏: ‚úÖ")
        logger.info("   - –ú–µ—Ç–æ–¥—ã MoverBot –¥–ª—è –º–µ–¥–∏–∞: ‚úÖ")
        logger.info("   - –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ–¥–∏–∞: ‚úÖ")
        logger.info("   - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–µ–¥–∏–∞-–¥–∞–Ω–Ω—ã—Ö –≤ Redis: ‚úÖ")
        
        # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if photo_task_id:
            await redis_client.delete_task(photo_task_id)
            logger.info(f"üóëÔ∏è –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ {photo_task_id} —É–¥–∞–ª–µ–Ω–∞")
        
        if doc_task_id:
            await redis_client.delete_task(doc_task_id)
            logger.info(f"üóëÔ∏è –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ {doc_task_id} —É–¥–∞–ª–µ–Ω–∞")
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(main())
